import ReactMarkdown from 'react-markdown';
import rehypeRaw from 'rehype-raw';
import rehypeSanitize from 'rehype-sanitize';

interface VulnerabilityCardProps {
  severity: number;
  text: string;
}

export default function VulnerabilityCard({ severity, text }: VulnerabilityCardProps) {
  // Convert severity to a color and style
  const getSeverityStyles = (severity: number): { bgColor: string; borderColor: string; textColor: string } => {
    if (severity >= 8) return { bgColor: 'bg-red-50', borderColor: 'border-red-500', textColor: 'text-red-700' };
    if (severity >= 5) return { bgColor: 'bg-orange-50', borderColor: 'border-orange-500', textColor: 'text-orange-700' };
    if (severity >= 3) return { bgColor: 'bg-yellow-50', borderColor: 'border-yellow-500', textColor: 'text-yellow-700' };
    return { bgColor: 'bg-green-50', borderColor: 'border-green-500', textColor: 'text-green-700' };
  };

  // Convert severity to a label
  const getSeverityLabel = (severity: number): string => {
    if (severity >= 8) return 'Critical';
    if (severity >= 5) return 'High';
    if (severity >= 3) return 'Medium';
    return 'Low';
  };

  // Get the styles based on severity
  const { bgColor, borderColor, textColor } = getSeverityStyles(severity);

  // Clean up the text to remove the severity section
  const cleanText = text.replace(/Severity[\s\S]*?(?:\n|$)/, '').trim();

  return (
    <div className={`border-l-4 ${borderColor} rounded-lg overflow-hidden shadow-sm transition-all hover:shadow-md`}>
      <div className={`flex items-center p-3 ${bgColor} border-b`}>
        <div className={`px-3 py-1 rounded-md ${textColor} font-medium text-sm`}>
          {getSeverityLabel(severity)}
        </div>
        <div className="ml-3 text-sm">
          Severity: <span className="font-bold">{severity}/10</span>
        </div>
      </div>
      <div className="p-4 whitespace-pre-wrap bg-white markdown-container">
      <ReactMarkdown 
        rehypePlugins={[rehypeRaw, rehypeSanitize]}
      >
        {cleanText}
      </ReactMarkdown>
    </div>
    </div>
  );
}